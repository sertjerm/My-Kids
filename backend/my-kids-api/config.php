<?php
// config.php - Database Configuration for MyKidsDB (Generated by Auto Installer)

// Database Configuration - Updated for sertjerm.com
define('DB_HOST', 'localhost');
define('DB_NAME', 'sertjerm_MyKids');
define('DB_USER', 'dbuser');
define('DB_PASS', 'dbpassword');
define('DB_CHARSET', 'utf8mb4');

// Timezone Setting
date_default_timezone_set('Asia/Bangkok');

// CORS Headers Function
function setCorsHeaders() {
    // ตรวจสอบ origin ที่ส่งมา
    $origin = $_SERVER['HTTP_ORIGIN'] ?? '*';
    
    // กำหนด allowed origins
    $allowedOrigins = [
        'http://localhost:3000',
        'http://localhost:5173', 
        'https://localhost:3000',
        'https://localhost:5173',
        'https://sertjerm.com',
        'http://sertjerm.com'
    ];
    
    // ตรวจสอบว่า origin ได้รับอนุญาตหรือไม่
    if ($origin === '*' || in_array($origin, $allowedOrigins) || 
        strpos($origin, 'localhost') !== false || 
        strpos($origin, 'sertjerm.com') !== false) {
        header("Access-Control-Allow-Origin: " . $origin);
    } else {
        header("Access-Control-Allow-Origin: *");
    }
    
    header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');
    header('Access-Control-Allow-Headers: Content-Type, Authorization, Accept, X-Requested-With');
    header('Access-Control-Allow-Credentials: false');
    header('Access-Control-Max-Age: 86400');
    header('Content-Type: application/json; charset=utf-8');
    
    // Handle preflight OPTIONS requests
    if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
        http_response_code(200);
        exit();
    }
}

// Database Connection Function
function getDbConnection() {
    try {
        $dsn = "mysql:host=" . DB_HOST . ";dbname=" . DB_NAME . ";charset=" . DB_CHARSET;
        $pdo = new PDO($dsn, DB_USER, DB_PASS, [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
            PDO::ATTR_EMULATE_PREPARES => false,
            PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci"
        ]);
        
        return $pdo;
    } catch (PDOException $e) {
        throw new Exception('Database connection failed: ' . $e->getMessage());
    }
}

// Helper function to send JSON response
function sendJson($data, $httpCode = 200) {
    http_response_code($httpCode);
    
    if (is_array($data) || is_object($data)) {
        echo json_encode($data, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
    } else {
        echo json_encode(['message' => $data], JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT);
    }
    exit();
}

// Error Handler
function handleError($message, $code = 500) {
    sendJson([
        'error' => true,
        'message' => $message,
        'timestamp' => date('c'),
        'code' => $code
    ], $code);
}

// API Configuration
define('API_VERSION', '3.0.0');
define('API_NAME', 'MyKids API');
define('DEBUG_MODE', false);

// Validation Functions
function isValidChildId($id) {
    return preg_match('/^C\d{3}$/', $id);
}

function isValidBehaviorId($id) {
    return preg_match('/^B\d{3}$/', $id);
}

function isValidRewardId($id) {
    return preg_match('/^R\d{3}$/', $id);
}
?>